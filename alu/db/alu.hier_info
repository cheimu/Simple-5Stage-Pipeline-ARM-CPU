|alu
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
A[7] => A[7].IN1
A[8] => A[8].IN1
A[9] => A[9].IN1
A[10] => A[10].IN1
A[11] => A[11].IN1
A[12] => A[12].IN1
A[13] => A[13].IN1
A[14] => A[14].IN1
A[15] => A[15].IN1
A[16] => A[16].IN1
A[17] => A[17].IN1
A[18] => A[18].IN1
A[19] => A[19].IN1
A[20] => A[20].IN1
A[21] => A[21].IN1
A[22] => A[22].IN1
A[23] => A[23].IN1
A[24] => A[24].IN1
A[25] => A[25].IN1
A[26] => A[26].IN1
A[27] => A[27].IN1
A[28] => A[28].IN1
A[29] => A[29].IN1
A[30] => A[30].IN1
A[31] => A[31].IN1
A[32] => A[32].IN1
A[33] => A[33].IN1
A[34] => A[34].IN1
A[35] => A[35].IN1
A[36] => A[36].IN1
A[37] => A[37].IN1
A[38] => A[38].IN1
A[39] => A[39].IN1
A[40] => A[40].IN1
A[41] => A[41].IN1
A[42] => A[42].IN1
A[43] => A[43].IN1
A[44] => A[44].IN1
A[45] => A[45].IN1
A[46] => A[46].IN1
A[47] => A[47].IN1
A[48] => A[48].IN1
A[49] => A[49].IN1
A[50] => A[50].IN1
A[51] => A[51].IN1
A[52] => A[52].IN1
A[53] => A[53].IN1
A[54] => A[54].IN1
A[55] => A[55].IN1
A[56] => A[56].IN1
A[57] => A[57].IN1
A[58] => A[58].IN1
A[59] => A[59].IN1
A[60] => A[60].IN1
A[61] => A[61].IN1
A[62] => A[62].IN1
A[63] => A[63].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
B[7] => B[7].IN1
B[8] => B[8].IN1
B[9] => B[9].IN1
B[10] => B[10].IN1
B[11] => B[11].IN1
B[12] => B[12].IN1
B[13] => B[13].IN1
B[14] => B[14].IN1
B[15] => B[15].IN1
B[16] => B[16].IN1
B[17] => B[17].IN1
B[18] => B[18].IN1
B[19] => B[19].IN1
B[20] => B[20].IN1
B[21] => B[21].IN1
B[22] => B[22].IN1
B[23] => B[23].IN1
B[24] => B[24].IN1
B[25] => B[25].IN1
B[26] => B[26].IN1
B[27] => B[27].IN1
B[28] => B[28].IN1
B[29] => B[29].IN1
B[30] => B[30].IN1
B[31] => B[31].IN1
B[32] => B[32].IN1
B[33] => B[33].IN1
B[34] => B[34].IN1
B[35] => B[35].IN1
B[36] => B[36].IN1
B[37] => B[37].IN1
B[38] => B[38].IN1
B[39] => B[39].IN1
B[40] => B[40].IN1
B[41] => B[41].IN1
B[42] => B[42].IN1
B[43] => B[43].IN1
B[44] => B[44].IN1
B[45] => B[45].IN1
B[46] => B[46].IN1
B[47] => B[47].IN1
B[48] => B[48].IN1
B[49] => B[49].IN1
B[50] => B[50].IN1
B[51] => B[51].IN1
B[52] => B[52].IN1
B[53] => B[53].IN1
B[54] => B[54].IN1
B[55] => B[55].IN1
B[56] => B[56].IN1
B[57] => B[57].IN1
B[58] => B[58].IN1
B[59] => B[59].IN1
B[60] => B[60].IN1
B[61] => B[61].IN1
B[62] => B[62].IN1
B[63] => B[63].IN1
cntrl[0] => cntrl[0].IN65
cntrl[1] => cntrl[1].IN64
cntrl[2] => cntrl[2].IN64
result[0] <= result[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result[7].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= result[8].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= result[9].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= result[10].DB_MAX_OUTPUT_PORT_TYPE
result[11] <= result[11].DB_MAX_OUTPUT_PORT_TYPE
result[12] <= result[12].DB_MAX_OUTPUT_PORT_TYPE
result[13] <= result[13].DB_MAX_OUTPUT_PORT_TYPE
result[14] <= result[14].DB_MAX_OUTPUT_PORT_TYPE
result[15] <= result[15].DB_MAX_OUTPUT_PORT_TYPE
result[16] <= result[16].DB_MAX_OUTPUT_PORT_TYPE
result[17] <= result[17].DB_MAX_OUTPUT_PORT_TYPE
result[18] <= result[18].DB_MAX_OUTPUT_PORT_TYPE
result[19] <= result[19].DB_MAX_OUTPUT_PORT_TYPE
result[20] <= result[20].DB_MAX_OUTPUT_PORT_TYPE
result[21] <= result[21].DB_MAX_OUTPUT_PORT_TYPE
result[22] <= result[22].DB_MAX_OUTPUT_PORT_TYPE
result[23] <= result[23].DB_MAX_OUTPUT_PORT_TYPE
result[24] <= result[24].DB_MAX_OUTPUT_PORT_TYPE
result[25] <= result[25].DB_MAX_OUTPUT_PORT_TYPE
result[26] <= result[26].DB_MAX_OUTPUT_PORT_TYPE
result[27] <= result[27].DB_MAX_OUTPUT_PORT_TYPE
result[28] <= result[28].DB_MAX_OUTPUT_PORT_TYPE
result[29] <= result[29].DB_MAX_OUTPUT_PORT_TYPE
result[30] <= result[30].DB_MAX_OUTPUT_PORT_TYPE
result[31] <= result[31].DB_MAX_OUTPUT_PORT_TYPE
result[32] <= result[32].DB_MAX_OUTPUT_PORT_TYPE
result[33] <= result[33].DB_MAX_OUTPUT_PORT_TYPE
result[34] <= result[34].DB_MAX_OUTPUT_PORT_TYPE
result[35] <= result[35].DB_MAX_OUTPUT_PORT_TYPE
result[36] <= result[36].DB_MAX_OUTPUT_PORT_TYPE
result[37] <= result[37].DB_MAX_OUTPUT_PORT_TYPE
result[38] <= result[38].DB_MAX_OUTPUT_PORT_TYPE
result[39] <= result[39].DB_MAX_OUTPUT_PORT_TYPE
result[40] <= result[40].DB_MAX_OUTPUT_PORT_TYPE
result[41] <= result[41].DB_MAX_OUTPUT_PORT_TYPE
result[42] <= result[42].DB_MAX_OUTPUT_PORT_TYPE
result[43] <= result[43].DB_MAX_OUTPUT_PORT_TYPE
result[44] <= result[44].DB_MAX_OUTPUT_PORT_TYPE
result[45] <= result[45].DB_MAX_OUTPUT_PORT_TYPE
result[46] <= result[46].DB_MAX_OUTPUT_PORT_TYPE
result[47] <= result[47].DB_MAX_OUTPUT_PORT_TYPE
result[48] <= result[48].DB_MAX_OUTPUT_PORT_TYPE
result[49] <= result[49].DB_MAX_OUTPUT_PORT_TYPE
result[50] <= result[50].DB_MAX_OUTPUT_PORT_TYPE
result[51] <= result[51].DB_MAX_OUTPUT_PORT_TYPE
result[52] <= result[52].DB_MAX_OUTPUT_PORT_TYPE
result[53] <= result[53].DB_MAX_OUTPUT_PORT_TYPE
result[54] <= result[54].DB_MAX_OUTPUT_PORT_TYPE
result[55] <= result[55].DB_MAX_OUTPUT_PORT_TYPE
result[56] <= result[56].DB_MAX_OUTPUT_PORT_TYPE
result[57] <= result[57].DB_MAX_OUTPUT_PORT_TYPE
result[58] <= result[58].DB_MAX_OUTPUT_PORT_TYPE
result[59] <= result[59].DB_MAX_OUTPUT_PORT_TYPE
result[60] <= result[60].DB_MAX_OUTPUT_PORT_TYPE
result[61] <= result[61].DB_MAX_OUTPUT_PORT_TYPE
result[62] <= result[62].DB_MAX_OUTPUT_PORT_TYPE
result[63] <= result[63].DB_MAX_OUTPUT_PORT_TYPE
negative <= result[63].DB_MAX_OUTPUT_PORT_TYPE
zero <= zeroflag:zflag.port0
overflow <= x0.DB_MAX_OUTPUT_PORT_TYPE
carry_out <= alu_1b:eachbit[63].alui.port1


|alu|alu_1b:alu0
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:alu0|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:alu0|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:alu0|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:alu0|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[1].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[1].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[1].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[2].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[2].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[2].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[3].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[3].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[3].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[4].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[4].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[4].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[5].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[5].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[5].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[6].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[6].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[6].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[7].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[7].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[7].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[8].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[8].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[8].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[9].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[9].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[9].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[10].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[10].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[10].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[11].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[11].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[11].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[12].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[12].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[12].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[13].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[13].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[13].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[14].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[14].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[14].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[15].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[15].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[15].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[16].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[16].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[16].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[17].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[17].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[17].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[18].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[18].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[18].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[19].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[19].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[19].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[20].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[20].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[20].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[21].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[21].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[21].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[22].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[22].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[22].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[23].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[23].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[23].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[24].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[24].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[24].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[25].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[25].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[25].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[26].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[26].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[26].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[27].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[27].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[27].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[28].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[28].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[28].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[29].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[29].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[29].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[30].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[30].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[30].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[31].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[31].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[31].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[32].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[32].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[32].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[33].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[33].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[33].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[34].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[34].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[34].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[35].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[35].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[35].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[36].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[36].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[36].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[37].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[37].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[37].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[38].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[38].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[38].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[39].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[39].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[39].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[40].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[40].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[40].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[41].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[41].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[41].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[42].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[42].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[42].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[43].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[43].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[43].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[44].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[44].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[44].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[45].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[45].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[45].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[46].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[46].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[46].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[47].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[47].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[47].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[48].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[48].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[48].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[49].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[49].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[49].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[50].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[50].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[50].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[51].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[51].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[51].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[52].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[52].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[52].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[53].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[53].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[53].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[54].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[54].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[54].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[55].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[55].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[55].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[56].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[56].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[56].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[57].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[57].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[57].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[58].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[58].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[58].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[59].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[59].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[59].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[60].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[60].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[60].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[61].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[61].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[61].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[62].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[62].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[62].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui
ri <= mux8_1:mux0.port0
cout <= add_sub:fulladder.port1
a => a.IN1
b => b.IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN1
sel[2] => sel[2].IN1
cin => cin.IN1


|alu|alu_1b:eachbit[63].alui|add_sub:fulladder
sum <= adder:add0.port0
cout <= adder:add0.port1
cin => cin.IN1
a => a.IN1
b => b.IN1
sel => sel.IN1


|alu|alu_1b:eachbit[63].alui|add_sub:fulladder|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|add_sub:fulladder|adder:add0
sum <= x1.DB_MAX_OUTPUT_PORT_TYPE
cout <= o0.DB_MAX_OUTPUT_PORT_TYPE
cin => x1.IN0
cin => a0.IN0
cin => a1.IN0
a => x1.IN1
a => a1.IN1
a => a2.IN0
b => x1.IN2
b => a0.IN1
b => a2.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0
out <= mux2_1:m2.port0
inp[0] => inp[0].IN1
inp[1] => inp[1].IN1
inp[2] => inp[2].IN1
inp[3] => inp[3].IN1
inp[4] => inp[4].IN1
inp[5] => inp[5].IN1
inp[6] => inp[6].IN1
inp[7] => inp[7].IN1
sel[0] => sel[0].IN2
sel[1] => sel[1].IN2
sel[2] => sel[2].IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m0
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m0|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m1
out <= mux2_1:m3.port0
i00 => i00.IN1
i01 => i01.IN1
i10 => i10.IN1
i11 => i11.IN1
sel0 => sel0.IN2
sel1 => sel1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m0
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m1
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux4_1:m1|mux2_1:m3
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|alu_1b:eachbit[63].alui|mux8_1:mux0|mux2_1:m2
out <= o1.DB_MAX_OUTPUT_PORT_TYPE
i0 => a1.IN0
i1 => a2.IN0
sel => a2.IN1
sel => a1.IN1


|alu|zeroflag:zflag
flag <= a20.DB_MAX_OUTPUT_PORT_TYPE
bits[0] => a0.IN0
bits[1] => a0.IN1
bits[2] => a0.IN2
bits[3] => a0.IN3
bits[4] => a1.IN0
bits[5] => a1.IN1
bits[6] => a1.IN2
bits[7] => a1.IN3
bits[8] => a2.IN0
bits[9] => a2.IN1
bits[10] => a2.IN2
bits[11] => a2.IN3
bits[12] => a3.IN0
bits[13] => a3.IN1
bits[14] => a3.IN2
bits[15] => a3.IN3
bits[16] => a4.IN0
bits[17] => a4.IN1
bits[18] => a4.IN2
bits[19] => a4.IN3
bits[20] => a5.IN0
bits[21] => a5.IN1
bits[22] => a5.IN2
bits[23] => a5.IN3
bits[24] => a6.IN0
bits[25] => a6.IN1
bits[26] => a6.IN2
bits[27] => a6.IN3
bits[28] => a7.IN0
bits[29] => a7.IN1
bits[30] => a7.IN2
bits[31] => a7.IN3
bits[32] => a8.IN0
bits[33] => a8.IN1
bits[34] => a8.IN2
bits[35] => a8.IN3
bits[36] => a9.IN0
bits[37] => a9.IN1
bits[38] => a9.IN2
bits[39] => a9.IN3
bits[40] => a10.IN0
bits[41] => a10.IN1
bits[42] => a10.IN2
bits[43] => a10.IN3
bits[44] => a11.IN0
bits[45] => a11.IN1
bits[46] => a11.IN2
bits[47] => a11.IN3
bits[48] => a12.IN0
bits[49] => a12.IN1
bits[50] => a12.IN2
bits[51] => a12.IN3
bits[52] => a13.IN0
bits[53] => a13.IN1
bits[54] => a13.IN2
bits[55] => a13.IN3
bits[56] => a14.IN0
bits[57] => a14.IN1
bits[58] => a14.IN2
bits[59] => a14.IN3
bits[60] => a15.IN0
bits[61] => a15.IN1
bits[62] => a15.IN2
bits[63] => a15.IN3


